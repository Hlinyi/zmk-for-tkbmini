/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_bkt {
            bindings = <&kp LBKT>;
            key-positions = <3 2>;
            timeout-ms = <50>;
        };

        right_bkt {
            bindings = <&kp RBKT>;
            key-positions = <6 7>;
            timeout-ms = <50>;
        };

        left_par {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <12 13>;
            timeout-ms = <50>;
        };

        right_par {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
            timeout-ms = <50>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            timeout-ms = <50>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <26 27>;
            timeout-ms = <50>;
        };

        bac {
            bindings = <&kp BACKSLASH>;
            key-positions = <4 5>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <14 15>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <180>;
        };

        as: as {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp Q                    &kp W           &kp E        &kp R         &kp T      &kp Y  &kp U  &kp I         &kp O    &kp P     &kp BACKSPACE
&kp LEFT_SHIFT  &kp A  &kp S  &kp D  &kp F  &kp G      &kp H  &kp J  &kp K  &kp L          &as COLON SEMICOLON  &as DOUBLE_QUOTES SINGLE_QUOTE
&kp LCTRL       &kp Z                    &kp X           &kp C        &kp V         &kp B      &kp N  &kp M  &kp COMMA     &kp DOT  &as QUESTION SLASH  &kp RIGHT_SHIFT
                           &ltq 1 BSPC  &ltq 2 ENTER  &lt 3 TAB                &ltq 2 SPACE  &kp ESC  &kp N8
            >;
        };

        lower_layer {
            bindings = <
&none  &kp LG(D)  &kp LA(A)  &kp UP     &kp DELETE  &trans     &trans     &kp N7  &kp N8  &kp N9      &trans      &none
&none  &kp LC(A)  &kp LEFT   &kp DOWN   &kp RIGHT   &kp B      &kp EQUAL  &kp N4  &kp N5  &kp N6      &kp N0      &none
&none  &kp LC(Z)  &kp LC(X)  &kp RC(C)  &kp LC(V)   &kp LG(V)  &kp MINUS  &kp N1  &kp N2  &kp N3      &kp KP_DOT  &none
        &trans     &trans      &trans                        &kp N0  &kp KP_DOT  &trans
            >;
        };

        raise_layer {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };

        adjust_layer {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };

        layer_4 {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };

        layer_5 {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };

        layer_6 {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };

        layer_7 {
            bindings = <
&none   &trans  &trans  &trans  &to 0   &trans  &trans  &trans  &trans  &trans  &none  &none
&trans  &trans  &trans  &trans  &trans  &none   &none   &none   &none   &none   &none  &none
&none   &none   &none   &none   &none   &none   &none   &none   &none   &none   &none  &none
         &none   &none   &none                   &none   &none &none
            >;
        };
    };
};